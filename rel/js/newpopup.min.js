$(document).ready(function(){var n,i,e,o;n=$(".options"),i=$(".show-notifs"),e=$(".clear-notifs"),o=$(".open-messages"),handle(n,"click.initLinks",function(){chrome.runtime.openOptionsPage()}),handle(i,"click.initLinks",function(){chrome.runtime.sendMessage({action:"showAllNotifications"})}),handle(e,"click.initLinks",function(){chrome.runtime.sendMessage({action:"confirm",msg:"Are you sure you want to clear all notifications?"},function(n){n&&modapi.login(function(){$.post(global.path.feed+"/clear_notifications",{_method:"delete",authenticity_token:global.token})})})}),handle(o,"click.initLinks",function(){chrome.windows.create({url:"messages.html",width:400,height:550,type:"popup"},function(){})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
