var storage={},me={};function preinit(){$.get(chrome.extension.getURL("content.html"),function(t){$("body").append(t),crapi.clone(function(t){var o,e,n,i,a,s,d;(storage=t).options.userTags&&function(){var o=storage.options.userTagLinks,t=$(".new_comment #comment_content");if(t.length){var e=$(".main div.comments"),n=e.find(".comment .content > h4").map(function(){return o?$(this).html():$(this).text()}).get().unique(),i=[];$.each(n,function(t,e){i.push({val:e})}),t.sew({values:i,elementFactory:function(t,e){t.html(o?$(e.val).text():e.val)}})}}(),storage.options.moveCommentBox&&function(){var t=$(".write-comment");if(t.length){var e=t.prevAll("h3").first(),o=t.siblings("div.comments");t.addClass("mod-write-comment"),o.addClass("mod-comments"),e.after(t)}}(),storage.options.groupFilters&&(o=$(".main .group-list"),e=_factory(".modation-factory",".modation-group-filter"),n=e.find(".filter"),o.addClass("mod-group-list"),o.before(e),o.isotope({itemSelector:".group",layoutMode:"vertical",transitionDuration:".3s"}),o.imagesLoaded().progress(function(){o.isotope("layout")}),handle(n,"input.initGroups",function(){var t=$(this),e=t.val(),n=e.toLowerCase();o.isotope({filter:function(){var t=$(this),e=t.find(".name"),o=e.text().toLowerCase();return-1!=o.indexOf(n)}})})),storage.options.moveGroupInvites&&(i=$(".main .group-list"),a=$(".main .invitations"),s=a.prev("h3"),a.addClass("mod-group-invites"),i.before(a),a.before(s)),storage.options.showAlertsOnTop&&$(".alert").addClass("mod-alert"),storage.options.watchlist&&(d=global.path.home+location.pathname,chrome.runtime.sendMessage({action:"watchlistItemType",link:d},function(t){var i=t;if(i){var a,s,r={watchlist:storage.watchlist},e=r.watchlist,c=e.findIndex(function(t){return t.link==d}),o=$("aside > section").first(),n=_factory(".modation-factory",".modation-watchlist-actions"),l=n.children(".add"),m=n.children(".remove");o.before(n),function o(){var t=~c;if(t){s=l;var e=(a=m).find(".unwatch");handle(e,"click.initWatchlist",function(t){t.preventDefault();var e=r.watchlist.splice(c,1);crapi.updateAll(r,function(t){t?(global.debug&&console.log("item unwatched! %o",e),c=-1,o()):console.error("Item not unwatched due to storage lock! Please try again in a few seconds.")})})}else{s=m;var n=(a=l).find(".watch");handle(n,"click.initWatchlist",function(t){t.preventDefault(),chrome.runtime.sendMessage({action:"parseWatchlistItem",link:d,html:document.documentElement.innerHTML,type:i},function(t){var e=r.watchlist.push(t.updates)-1;crapi.updateAll(r,function(t){t?(global.debug&&console.log("item watched! %o",r),c=e,o()):console.error("Item not watched due to storage lock! Please try again in a few seconds.")})})})}showView(s,a,0)}()}})),modapi.login(function(t){me=t})})})}preinit();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
