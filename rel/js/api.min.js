String.prototype.hashCode=function(){var hash=0,i,c;if(this.length==0)return hash;for(i=0,l=this.length;i<l;i++){c=this.charCodeAt(i);hash=(hash<<5)-hash+c;hash|=0}return hash};String.prototype.deres=function(){return this.replace(/img[^>]*>/g,"")};Array.prototype.unique=function(){return this.reduce(function(p,c){if(p.indexOf(c)<0)p.push(c);return p},[])};Array.prototype.diff=function(compare){return this.reduce(function(p,c){if(compare.indexOf(c)==-1)p.push(c);return p},[])};
function handle(target,event,callback,trigger){if(typeof trigger=="undefined")trigger=false;var $target=$(target);$target.off(event);$target.on(event,callback)}function showView(context,view,fade){if(typeof fade=="undefined")fade=170;$(context).fadeOut(fade);$(view).delay(fade).fadeIn(fade)}function _factory(parent,key){return $(parent+" "+key).clone()}crapi=new CrAPI;CrAPI.prototype.manifest=function(){return chrome.runtime.getManifest()};CrAPI.prototype.reload=function(){location.reload()};
CrAPI.prototype.debug=crapi.manifest().debug;CrAPI.prototype.lock=function(state){if(typeof state=="undefined")state="";localStorage.crapi_locked=state};CrAPI.prototype.locked=function(){console.log("lock checked");return localStorage.crapi_locked};
function CrAPI(){console.log("%cCrAPI%c :: Init","font-weight: bold; color: green","");this.DEFAULT_CALLBACK=function(d){return typeof d!="undefined"?d:false};this.badgeColors={gray:"#9a9a9a",red:"#d00"};this.badgeOptions={title:false,color:false,text:false};if(typeof localStorage.crapi_locked=="undefined")localStorage.crapi_locked=""}
CrAPI.prototype.storage=function(type){type=typeof type=="undefined"?"sync":type;switch(type){case "local":return chrome.storage.local;break;case "sync":return chrome.storage.sync;break;default:return false;break}return-1};CrAPI.prototype.clone=function(callback){if(typeof callback=="undefined")callback=this.DEFAULT_CALLBACK;this.storage().get(function(d){console.log("%cCrAPI%c :: Clone storage: %O","font-weight: bold; color: green","",d);callback(d)})};
CrAPI.prototype.update=function(key,value,callback){if(typeof callback=="undefined")callback=this.DEFAULT_CALLBACK;var _this=this;if(!_this.locked()){var updatedStorage={};updatedStorage[key]=value;_this.lock("Update storage");_this.storage().set(updatedStorage,function(){_this.lock();console.log("%cCrAPI%c :: Update storage: %O","font-weight: bold; color: green","",updatedStorage);callback(value)})}else{console.error("%cCrAPI%c :: Storage locked: %o","font-weight: bold; color: green","",this.locked);
callback(false)}};CrAPI.prototype.updateAll=function(items,callback){if(typeof callback=="undefined")callback=this.DEFAULT_CALLBACK;var _this=this;if(!_this.locked()){_this.lock("Update all");_this.storage().set(items,function(){_this.lock();console.log("%cCrAPI%c :: Update all: %O","font-weight: bold; color: green","",items);callback()})}else{console.error("%cCrAPI%c :: Storage locked: %o","font-weight: bold; color: green","",this.locked);callback(false)}};
CrAPI.prototype.badge=function(matrix){var options=$.extend({},this.badgeOptions,matrix);var color=typeof this.badgeColors[options.color]!="undefined"?this.badgeColors[options.color]:options.color;if(options.title!==false)chrome.browserAction.setTitle({title:options.title});if(color!==false)chrome.browserAction.setBadgeBackgroundColor({color:color});if(options.text!==false)chrome.browserAction.setBadgeText({text:options.text})};modapi=new ModAPI;modapi.manifest=crapi.manifest();var protocol="https://";var domain="soundation.com";var global={path:{home:protocol+domain,login:protocol+domain+"?login=yes",feed:protocol+domain+"/feed",api:protocol+"api."+domain+"/me",profile:protocol+domain+"/account/profile"}};function ModAPI(){console.log("%cModAPI%c :: Init","font-weight: bold; color: #f60","");this.DEFAULT_CALLBACK=function(){}}
ModAPI.prototype.login=function(callback){if(typeof callback=="undefined")callback=this.DEFAULT_CALLBACK;console.log("%cModAPI%c :: Login","font-weight: bold; color: #f60","");$.get(global.path.home,function(html){var parsedHtml=html.deres();var $html=$(parsedHtml);var profileLink=$html.find(".user-link").attr("href");var token=$html.filter("[name=csrf-token]").attr("content");_me(function(me){me.link=profileLink;global.token=token;callback(me)})});function _me(callback){$.getJSON(global.path.api).fail(function(jqXHR,
textStatus){console.error("%cModAPI%c :: Unable to connect to Soundation API","font-weight: bold; color: #f60","")}).success(function(data){var me=data.data||data;me.success=data.success;callback(me)})}};ModAPI.prototype.token=function(){return global.token};
